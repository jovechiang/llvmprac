### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
/usr/local/bin/ocamldep.opt -modules main.ml > main.ml.depends # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, pp(camlp4of), quiet, traverse, use_camlp4 }
/usr/local/bin/ocamldep.opt -pp camlp4of -modules lexer.ml > lexer.ml.depends # cached
# Target: token.ml.depends, tags: { extension:ml, file:token.ml, ocaml, ocamldep, quiet, traverse }
/usr/local/bin/ocamldep.opt -modules token.ml > token.ml.depends # cached
# Target: token.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:token.cmo, file:token.ml, implem, ocaml, quiet, traverse }
/usr/local/bin/ocamlc.opt -c -o token.cmo token.ml # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, pp(camlp4of), quiet, traverse, use_camlp4 }
/usr/local/bin/ocamlc.opt -c -I +camlp4 -pp camlp4of -o lexer.cmo lexer.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, pp(camlp4of), quiet, traverse, use_camlp4 }
/usr/local/bin/ocamldep.opt -pp camlp4of -modules parser.ml > parser.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse }
/usr/local/bin/ocamldep.opt -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet, traverse }
/usr/local/bin/ocamlc.opt -c -o ast.cmo ast.ml # cached
# Target: parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:parser.cmo, file:parser.ml, implem, ocaml, pp(camlp4of), quiet, traverse, use_camlp4 }
/usr/local/bin/ocamlc.opt -c -I +camlp4 -pp camlp4of -o parser.cmo parser.ml # cached
# Target: toplevel.ml.depends, tags: { extension:ml, file:toplevel.ml, ocaml, ocamldep, quiet, traverse }
/usr/local/bin/ocamldep.opt -modules toplevel.ml > toplevel.ml.depends # cached
# Target: toplevel.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:toplevel.cmo, file:toplevel.ml, implem, ocaml, quiet, traverse }
/usr/local/bin/ocamlc.opt -c -o toplevel.cmo toplevel.ml # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
/usr/local/bin/ocamlc.opt -c -o main.cmo main.ml # cached
# Target: main.byte, tags: { byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
/usr/local/bin/ocamlc.opt token.cmo lexer.cmo ast.cmo parser.cmo toplevel.cmo main.cmo -o main.byte
# Compilation successful.
